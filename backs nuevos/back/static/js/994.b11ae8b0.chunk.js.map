{"version":3,"file":"static/js/994.b11ae8b0.chunk.js","mappings":"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","sources":["components/pages/Show.js","components/pages/Shows.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { showsCollectionRef } from \"../../firebase\";\r\nimport \"./Show.css\";\r\nimport Reservas from \"./../Layout/Reservas\";\r\n\r\nconst Show = ({ closeSingle, elId }) => {\r\n  const [elShow, setElShow] = useState();\r\n\r\n  useEffect(() => {\r\n    getShow();\r\n  }, []);\r\n\r\n  async function getShow() {\r\n    try {\r\n      const docRef = doc(showsCollectionRef, elId);\r\n      const docSnap = await getDoc(docRef);\r\n      setElShow(docSnap.data());\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {elShow ? (\r\n        <div className=\"elShow-container\">\r\n          <div className=\"elShow-imagen-container\">\r\n            <button onClick={closeSingle} className=\"volver\">\r\n              <i className=\"material-icons volver-icon\">keyboard_arrow_left</i>\r\n            </button>\r\n            <img className=\"elShow-imagen\" alt=\"\" src={elShow.imagenURL}></img>\r\n            <div className=\"elShow-text-container mobile\">\r\n              <h2 className=\"elShow-titulo\">{elShow.titulo}</h2>\r\n              <h3 className=\"elShow-subtitulo\">{elShow.subtitulo}</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"elShow-dataContainer\">\r\n            <div className=\"elShow-text-container desk\">\r\n              <h2 className=\"elShow-titulo\">{elShow.titulo}</h2>\r\n              <h3 className=\"elShow-subtitulo\">{elShow.subtitulo}</h3>\r\n            </div>\r\n            <div className=\"elShow-descripcion-container\">\r\n              <div\r\n                className=\"elShow-descripcion-container\"\r\n                dangerouslySetInnerHTML={{ __html: elShow.descripcion }}\r\n              ></div>\r\n              <div\r\n                className=\"elShow-precios-container\"\r\n                dangerouslySetInnerHTML={{ __html: elShow.precios }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"elShow-fecha-container\">\r\n              <div className=\"elShow-fecha-iconoSchedule\">\r\n                <i className=\"material-icons\">schedule</i>\r\n              </div>\r\n              <p className=\"elShow-fecha-texto\">\r\n                {new Date(elShow.fechaYHora.seconds * 1000).toLocaleDateString(\r\n                  \"es-ES\",\r\n                  {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  }\r\n                )}{\" \"}\r\n                {<br></br>}{\" \"}\r\n                {new Date(elShow.fechaYHora.seconds * 1000)\r\n                  .toLocaleTimeString()\r\n                  .slice(0, -3) + \" hs.\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      <button className=\"elShow-fecha-button\" onClick={closeSingle}>\r\n        Volver\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useModal } from \"./../../Hooks/useModal\";\r\nimport { showsCollectionRef } from \"../../firebase\";\r\nimport { query, orderBy, startAfter, limit, where, getCountFromServer, getDocs } from \"firebase/firestore\";\r\nimport \"./Shows.css\";\r\nimport Show from \"./Show\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst Shows = ({lastVisible, setLastVisible}) => {\r\n  const [losShows, setLosShows] = useState([]);\r\n  const [isOpenSingle, openSingle, closeSingle] = useModal(false);\r\n  const [elId, setElId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [pagina, setPagina] = useState(1);\r\n  const [totalPaginas, setTotalPaginas] = useState();\r\n  const showsPorPagina = 10;\r\n\r\n  useEffect(() => {\r\n    getShows();\r\n  }, [pagina]);\r\n\r\n  useEffect(()=> {\r\n    contarPaginas();\r\n  }, [totalPaginas])\r\n\r\n  async function contarPaginas(){\r\n    const q = query(showsCollectionRef, where(\"fechaYHora\", \">=\", new Date(Date.now())));\r\n    const snapshot = await getCountFromServer(q);\r\n    setTotalPaginas(Math.ceil(snapshot.data().count / showsPorPagina));\r\n  }\r\n\r\n  function openUnShow(id) {\r\n    setElId(id);\r\n    openSingle();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  async function getShows() {\r\n    setIsLoading(true);\r\n \r\n    const q = query(\r\n      showsCollectionRef,\r\n      where(\"fechaYHora\", \">=\", new Date(Date.now())),\r\n      orderBy(\"fechaYHora\"), startAfter(lastVisible),\r\n      limit(showsPorPagina)\r\n    );\r\n\r\n    const documentSnapshots = await getDocs(q);\r\n\r\n    const showsData = documentSnapshots.docs.map((show) => ({\r\n      id: show.id,\r\n      titulo: show.data().titulo,\r\n      subtitulo: show.data().subtitulo,\r\n      descripcion: show.data().descripcion,\r\n      fecha: new Date(\r\n        show.data().fechaYHora.seconds * 1000\r\n      ).toLocaleDateString(\"es-ES\", {\r\n        weekday: \"long\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      }),\r\n      hora: new Date(show.data().fechaYHora.seconds * 1000)\r\n        .toLocaleTimeString()\r\n        .slice(0, -3),\r\n      imagenURL: show.data().imagenURL,\r\n      fechaYHora: show.data().fechaYHora.seconds,\r\n    }));\r\n    //setLosShows(showsData.sort((a, b) => a.fechaYHora - b.fechaYHora));\r\n    setLosShows(showsData);\r\n    setIsLoading(false);\r\n    setLastVisible(documentSnapshots.docs[documentSnapshots.docs.length-1]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <Spinner></Spinner>}\r\n      {isOpenSingle && <Show closeSingle={closeSingle} elId={elId}></Show>}\r\n      {!isOpenSingle && (\r\n        <div className=\"shows-container\">\r\n          {pagina > 1 && <div className=\"pagination-container\"><p>p√°gina {pagina}</p><button onClick={()=>{setLastVisible(null); setPagina(1);}}>volver al inicio</button></div>}\r\n          {losShows ? (\r\n            losShows.map((show, i) => (\r\n              <div className=\"show-container\" key={i}>\r\n                <img\r\n                  className=\"show-img\"\r\n                  alt=\"imagen show\"\r\n                  src={show.imagenURL}\r\n                ></img>\r\n                <div className=\"show-dataContainer\">\r\n                  <div className=\"show-descripcionContainer\">\r\n                    <h2 className=\"show-titulo\">{show.titulo}</h2>\r\n                    <h3 className=\"show-subtitulo\">{show.subtitulo}</h3>\r\n                    <div\r\n                      className=\"descripcion-container line-clamp\"\r\n                      dangerouslySetInnerHTML={{ __html: show.descripcion }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"fecha-container\">\r\n                    <div className=\"fecha-iconoSchedule\">\r\n                      <i className=\"material-icons\">schedule</i>\r\n                    </div>\r\n                    <p className=\"fecha-texto\">\r\n                      {show.fecha} {<br></br>} {show.hora + \"hs.\"}\r\n                    </p>\r\n                    <button\r\n                      onClick={() => openUnShow(show.id)}\r\n                      className=\"fecha-button\"\r\n                    >\r\n                      + Informaci√≥n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h3>Sin Shows</h3>\r\n          )}\r\n          <div className=\"pagination-container\">\r\n          <p>p√°gina {pagina}</p>\r\n          <button onClick={()=>{setPagina(pagina + 1); window.scrollTo(0, 0);}}>Mostrar mas shows</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shows;\r\n"],"names":["closeSingle","elId","useState","elShow","setElShow","docRef","doc","showsCollectionRef","getDoc","docSnap","data","console","log","message","useEffect","getShow","className","onClick","alt","src","imagenURL","titulo","subtitulo","dangerouslySetInnerHTML","__html","descripcion","precios","Date","fechaYHora","seconds","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","slice","lastVisible","setLastVisible","losShows","setLosShows","useModal","isOpenSingle","openSingle","setElId","isLoading","setIsLoading","pagina","setPagina","totalPaginas","setTotalPaginas","q","query","where","now","getCountFromServer","snapshot","Math","ceil","count","orderBy","startAfter","limit","getDocs","documentSnapshots","showsData","docs","map","show","id","fecha","hora","length","getShows","contarPaginas","Spinner","i","window","scrollTo"],"sourceRoot":""}