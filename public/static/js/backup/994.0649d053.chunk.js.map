{"version":3,"file":"static/js/994.0649d053.chunk.js","mappings":"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","sources":["components/pages/Show.js","components/pages/Shows.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { showsCollectionRef } from \"../../firebase\";\r\nimport \"./Show.css\";\r\nimport Reservas from \"./../Layout/Reservas\";\r\n\r\nconst Show = ({ closeSingle, elId }) => {\r\n  const [elShow, setElShow] = useState();\r\n\r\n  useEffect(() => {\r\n    getShow();\r\n  }, []);\r\n\r\n  async function getShow() {\r\n    try {\r\n      const docRef = doc(showsCollectionRef, elId);\r\n      const docSnap = await getDoc(docRef);\r\n      setElShow(docSnap.data());\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {elShow ? (\r\n        <div className=\"elShow-container\">\r\n          <div className=\"elShow-imagen-container\">\r\n            <button onClick={closeSingle} className=\"volver\">\r\n              <i className=\"material-icons volver-icon\">keyboard_arrow_left</i>\r\n            </button>\r\n            <img className=\"elShow-imagen\" alt=\"\" src={elShow.imagenURL}></img>\r\n            <div className=\"elShow-text-container mobile\">\r\n              <h2 className=\"elShow-titulo\">{elShow.titulo}</h2>\r\n              <h3 className=\"elShow-subtitulo\">{elShow.subtitulo}</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"elShow-dataContainer\">\r\n            <div className=\"elShow-text-container desk\">\r\n              <h2 className=\"elShow-titulo\">{elShow.titulo}</h2>\r\n              <h3 className=\"elShow-subtitulo\">{elShow.subtitulo}</h3>\r\n            </div>\r\n            <div className=\"elShow-descripcion-container\">\r\n              <div\r\n                className=\"elShow-descripcion-container\"\r\n                dangerouslySetInnerHTML={{ __html: elShow.descripcion }}\r\n              ></div>\r\n              <div\r\n                className=\"elShow-precios-container\"\r\n                dangerouslySetInnerHTML={{ __html: elShow.precios }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"elShow-fecha-container\">\r\n              <div className=\"elShow-fecha-iconoSchedule\">\r\n                <i className=\"material-icons\">schedule</i>\r\n              </div>\r\n              <p className=\"elShow-fecha-texto\">\r\n                {new Date(elShow.fechaYHora.seconds * 1000).toLocaleDateString(\r\n                  \"es-ES\",\r\n                  {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  }\r\n                )}{\" \"}\r\n                {<br></br>}{\" \"}\r\n                {new Date(elShow.fechaYHora.seconds * 1000)\r\n                  .toLocaleTimeString()\r\n                  .slice(0, -3) + \" hs.\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      <button className=\"elShow-fecha-button\" onClick={closeSingle}>\r\n        Volver\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import { getDocs } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useModal } from \"./../../Hooks/useModal\";\r\nimport { showsCollectionRef } from \"../../firebase\";\r\nimport { query, where } from \"firebase/firestore\";\r\nimport \"./Shows.css\";\r\nimport Show from \"./Show\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst Shows = () => {\r\n  const [losShows, setLosShows] = useState([]);\r\n  const [isOpenSingle, openSingle, closeSingle] = useModal(false);\r\n  const [elId, setElId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getShows();\r\n    return getShows();\r\n  }, []);\r\n\r\n  function openUnShow(id) {\r\n    setElId(id);\r\n    openSingle();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  function getShows() {\r\n    setIsLoading(true);\r\n    const q = query(\r\n      showsCollectionRef,\r\n      where(\"fechaYHora\", \">=\", new Date(Date.now()))\r\n    );\r\n    const r = query(showsCollectionRef, where(\"titulo\", \"!=\", null));\r\n    getDocs(q)\r\n      .then((res) => {\r\n        const showsData = res.docs.map((show) => ({\r\n          id: show.id,\r\n          titulo: show.data().titulo,\r\n          subtitulo: show.data().subtitulo,\r\n          descripcion: show.data().descripcion,\r\n          fecha: new Date(\r\n            show.data().fechaYHora.seconds * 1000\r\n          ).toLocaleDateString(\"es-ES\", {\r\n            weekday: \"long\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n          }),\r\n          hora: new Date(show.data().fechaYHora.seconds * 1000)\r\n            .toLocaleTimeString()\r\n            .slice(0, -3),\r\n          imagenURL: show.data().imagenURL,\r\n          fechaYHora: show.data().fechaYHora.seconds,\r\n        }));\r\n        setLosShows(showsData.sort((a, b) => a.fechaYHora - b.fechaYHora));\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n  return (\r\n    <div>\r\n      {isLoading && <Spinner></Spinner>}\r\n      {isOpenSingle && <Show closeSingle={closeSingle} elId={elId}></Show>}\r\n      {!isOpenSingle && (\r\n        <div className=\"shows-container\">\r\n          {losShows ? (\r\n            losShows.map((show, i) => (\r\n              <div className=\"show-container\" key={i}>\r\n                <img\r\n                  className=\"show-img\"\r\n                  alt=\"imagen show\"\r\n                  src={show.imagenURL}\r\n                ></img>\r\n                <div className=\"show-dataContainer\">\r\n                  <div className=\"show-descripcionContainer\">\r\n                    <h2 className=\"show-titulo\">{show.titulo}</h2>\r\n                    <h3 className=\"show-subtitulo\">{show.subtitulo}</h3>\r\n                    <div\r\n                      className=\"descripcion-container line-clamp\"\r\n                      dangerouslySetInnerHTML={{ __html: show.descripcion }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"fecha-container\">\r\n                    <div className=\"fecha-iconoSchedule\">\r\n                      <i className=\"material-icons\">schedule</i>\r\n                    </div>\r\n                    <p className=\"fecha-texto\">\r\n                      {show.fecha} {<br></br>} {show.hora + \"hs.\"}\r\n                    </p>\r\n                    <button\r\n                      onClick={() => openUnShow(show.id)}\r\n                      className=\"fecha-button\"\r\n                    >\r\n                      + Información\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h3>Sin Shows</h3>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shows;\r\n"],"names":["closeSingle","elId","useState","elShow","setElShow","docRef","doc","showsCollectionRef","getDoc","docSnap","data","console","log","message","useEffect","getShow","className","onClick","alt","src","imagenURL","titulo","subtitulo","dangerouslySetInnerHTML","__html","descripcion","precios","Date","fechaYHora","seconds","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","slice","losShows","setLosShows","useModal","isOpenSingle","openSingle","setElId","isLoading","setIsLoading","getShows","q","query","where","now","getDocs","then","res","showsData","docs","map","show","id","fecha","hora","sort","a","b","catch","err","Spinner","i","window","scrollTo"],"sourceRoot":""}