{"version":3,"file":"static/js/995.95ab1e28.chunk.js","mappings":"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","sources":["components/pages/Carta.js"],"sourcesContent":["import { FormControlUnstyledContext } from \"@mui/base\";\r\nimport { getDocs } from \"firebase/firestore\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { cartaCollectionRef } from \"../../firebase\";\r\nimport \"./Carta.css\";\r\n\r\nexport default function Carta() {\r\n  const [laCarta, setLaCarta] = useState([]);\r\n  const [salados, setSalados] = useState([]);\r\n  const [dulces, setDulces] = useState([]);\r\n  const [entradas, setEntradas] = useState([]);\r\n  const [principales, setPrincipales] = useState([]);\r\n  const [vinosTintos, setVinosTintos] = useState([]);\r\n  const [vinosBlancos, setVinosBlancos] = useState([]);\r\n  const [champagnes, setChampagnes] = useState([]);\r\n  const [cafeteria, setCafeteria] = useState([]);\r\n  const [bebidas, setBebidas] = useState([]);\r\n  const [cervezas, setCervezas] = useState([]);\r\n  const [tragos, setTragos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtenerCarta();\r\n    /*     return obtenerCarta(); */\r\n  }, []);\r\n\r\n  async function obtenerCarta() {\r\n    try {\r\n      const cartaData = await getDocs(cartaCollectionRef);\r\n      const p = new Promise((resolve, reject) => {\r\n        const cartaItems = cartaData.docs.map((item) => ({\r\n          id: item.id,\r\n          titulo: item.data().titulo,\r\n          descripcion: item.data().descripcion,\r\n          imagenURL: item.data().imagenURL,\r\n          precio: item.data().precio,\r\n          categoria: item.data().categoria || null,\r\n        }));\r\n        setLaCarta(cartaItems.sort((a, b) => a.precio - b.precio));\r\n        resolve(cartaItems);\r\n      });\r\n      p.then((res) => {\r\n        let sala = [];\r\n        let dulc = [];\r\n        let entr = [];\r\n        let prin = [];\r\n        let vnTn = [];\r\n        let vnBl = [];\r\n        let cham = [];\r\n        let cafe = [];\r\n        let bebi = [];\r\n        let cerv = [];\r\n        let trag = [];\r\n        res.forEach((item) => {\r\n          item.categoria === \"Salados\" && sala.push(item);\r\n          item.categoria === \"Dulces\" && dulc.push(item);\r\n          item.categoria === \"Entradas\" && entr.push(item);\r\n          item.categoria === \"Princiales\" && prin.push(item);\r\n          item.categoria === \"Vinos tintos\" && vnTn.push(item);\r\n          item.categoria === \"Vinos blancos\" && vnBl.push(item);\r\n          item.categoria === \"Champagnes\" && cham.push(item);\r\n          item.categoria === \"Cafeteria\" && cafe.push(item);\r\n          item.categoria === \"Bebidas\" && bebi.push(item);\r\n          item.categoria === \"Cervezas\" && cerv.push(item);\r\n          item.categoria === \"Tragos\" && trag.push(item);\r\n        });\r\n        setSalados(sala);\r\n        setDulces(dulc);\r\n        setEntradas(entr);\r\n        setPrincipales(prin);\r\n        setVinosTintos(vnTn);\r\n        setVinosBlancos(vnBl);\r\n        setChampagnes(cham);\r\n        setCafeteria(cafe);\r\n        setBebidas(bebi);\r\n        setCervezas(cerv);\r\n        setTragos(trag);\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const separador =\r\n    \" ......................................................................................................................................................\";\r\n\r\n  return (\r\n    <div>\r\n      {salados.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Salados</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {salados ? (\r\n                salados.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {dulces.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Dulces</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {dulces ? (\r\n                dulces.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {entradas.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Entradas</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {entradas ? (\r\n                entradas.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {principales.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Principales</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {principales ? (\r\n                principales.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {vinosTintos.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Vinos Tintos</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {vinosTintos ? (\r\n                vinosTintos.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {vinosBlancos.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Vinos Blancos</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {vinosBlancos ? (\r\n                vinosBlancos.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {champagnes.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Espumantes</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {champagnes ? (\r\n                champagnes.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {cafeteria.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Cafeteria</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {cafeteria ? (\r\n                cafeteria.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {bebidas.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Bebidas</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {bebidas ? (\r\n                bebidas.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {cervezas.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Cervezas</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {cervezas ? (\r\n                cervezas.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {tragos.length !== 0 && (\r\n        <div className=\"carta-categoria-container\">\r\n          <div className=\"carta-separadorHorizontal\"></div>\r\n          <h2 className=\"carta-categoria-titulo\">Tragos</h2>\r\n          <table className=\"carta-categoria-tabla\">\r\n            <tbody>\r\n              {tragos ? (\r\n                tragos.map((item, i) => (\r\n                  <tr key={i}>\r\n                    <td className=\"carta-itemNombre\">\r\n                      {item.titulo + separador}\r\n                    </td>\r\n                    <td className=\"carta-itemPrecio\">${item.precio}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className=\"laCarta-container\">\r\n        {laCarta ? (\r\n          laCarta.map((item, i) => (\r\n            <div className=\"show-container\" key={i}>\r\n              <img\r\n                className=\"show-img\"\r\n                alt=\"imagen show\"\r\n                src={item.imagenURL}\r\n              ></img>\r\n              <h2 className=\"show-titulo\">{item.titulo}</h2>\r\n              <h3 className=\"show-subtitulo\">{item.subtitulo}</h3>\r\n              <div\r\n                className=\"descripcion-container\"\r\n                dangerouslySetInnerHTML={{ __html: item.descripcion }}\r\n              ></div>\r\n              <div className=\"fecha-container\">\r\n                <div className=\"fecha-iconoSchedule\">\r\n                  <i className=\"material-icons\">schedule</i>\r\n                </div>\r\n                <p className=\"fecha-texto\">{item.fechaYHora}</p>\r\n                <button\r\n                  onClick={() => openUnShow(item.id)}\r\n                  className=\"fecha-button\"\r\n                >\r\n                  Información\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h3>Sin Shows</h3>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Carta","useState","setLaCarta","salados","setSalados","dulces","setDulces","entradas","setEntradas","principales","setPrincipales","vinosTintos","setVinosTintos","vinosBlancos","setVinosBlancos","champagnes","setChampagnes","cafeteria","setCafeteria","bebidas","setBebidas","cervezas","setCervezas","tragos","setTragos","getDocs","cartaCollectionRef","cartaData","Promise","resolve","reject","cartaItems","docs","map","item","id","titulo","data","descripcion","imagenURL","precio","categoria","sort","a","b","then","res","sala","dulc","entr","prin","vnTn","vnBl","cham","cafe","bebi","cerv","trag","forEach","push","console","log","useEffect","obtenerCarta","separador","length","className","i"],"sourceRoot":""}