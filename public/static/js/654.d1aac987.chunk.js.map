{"version":3,"file":"static/js/654.d1aac987.chunk.js","mappings":"gKACO,SAASA,EAAM,GAA0B,IAAxBC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAC/B,OACE,iBAAKC,UAAU,kBAAiB,WAC9B,iBAAMA,UAAU,aAAY,SAAEF,KAC9B,mBAAQG,QAAS,kBAAMF,GAAY,EAAEC,UAAU,eAAc,sBAKnE,C,qLCHe,SAASE,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAU,KACV,eAHKC,EAAI,KAAEC,EAAO,KAKZC,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BR,EAAAA,EAAAA,YAAU,eAA7BS,EAAK,KAAEC,EAAQ,KAEtB,GAA8BV,EAAAA,EAAAA,WAAS,GAAM,eAAtCW,EAAO,KAAEC,EAAU,KAEpBC,EAAe,SAAH,WAAMC,OAAUC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAK,OAC3CZ,GAAQ,kBAAKD,GAAI,cAAGY,EAAOC,IAAS,EAEhCC,EAAY,yCAAG,WAAOC,GAAC,sEAGV,OAFjBA,EAAEC,iBACFT,EAAS,IACTE,GAAW,GAAM,kBAETP,EAAMF,EAAKF,MAAOE,EAAKD,UAAU,KAAD,EACtCK,EAAS,UAAU,gDAEF,wBAAb,KAAIa,MACNV,EAAS,qCACM,uBAAb,KAAIU,MACNV,EAAS,wCACM,wBAAb,KAAIU,MACNV,EAAS,mCAAgC,yDAE9C,gBAfiB,sCA+BlB,OACE,iBAAKb,UAAU,kBAAiB,UAC7BY,IAAS,SAACf,EAAA,EAAK,CAACC,QAASc,EAAOb,WAvClB,WAAH,OAASc,EAAS,KAAM,IAwCnCC,IAAW,SAACU,EAAA,EAAO,KACpB,kBAAMxB,UAAU,iBAAgB,WAC9B,iBAAKA,UAAU,uBAAsB,WACnC,kBAAOyB,QAAQ,QAAQzB,UAAU,cAAa,oBAG9C,kBACEA,UAAU,cACV0B,KAAK,QACLR,KAAK,QACLS,YAAY,iBACZC,SAAUZ,QAId,iBAAKhB,UAAU,sBAAqB,WAClC,kBAAOyB,QAAQ,WAAWzB,UAAU,iBAAgB,uBAGpD,kBACEA,UAAU,iBACV0B,KAAK,WACLR,KAAK,WACLW,GAAG,WACHF,YAAY,SACZC,SAAUZ,QAId,mBAAQhB,UAAU,eAAeC,QAAS,SAACoB,GAAC,OAAKD,EAAaC,EAAE,EAAC,wBAOzE,C","sources":["components/Layout/Alert.js","components/pages/Login.js"],"sourcesContent":["import \"./Alert.css\";\r\nexport function Alert({ message, resetError }) {\r\n  return (\r\n    <div className=\"alert-container\">\r\n      <span className=\"alert-span\">{message}</span>\r\n      <button onClick={() => resetError()} className=\"alert-button\">\r\n        Cerrar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useAuth } from \"./../../context/authContext\";\r\nimport { useNavigate, Navigate } from \"react-router-dom\";\r\nimport { Alert } from \"../Layout/Alert\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState();\r\n  const resetError = () => setError(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = ({ target: { name, value } }) =>\r\n    setUser({ ...user, [name]: value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      await login(user.email, user.password);\r\n      navigate(\"/admin\");\r\n    } catch (err) {\r\n      if (err.code === \"auth/user-not-found\")\r\n        setError(\"No se encuentra el usuario o mail\");\r\n      if (err.code === \"auth/invalid-email\")\r\n        setError(\"No se ingresó un correo válido\");\r\n      if (err.code === \"auth/wrong-password\")\r\n        setError(\"La contraseña no es correcta\");\r\n    }\r\n  };\r\n\r\n  /* const handleGoogleSignIn = async () => {\r\n    try {\r\n      await loginWithGoogle();\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  }; \r\n  \r\n  \r\n  \r\n  onSubmit={handleSubmit} \r\n  */\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {error && <Alert message={error} resetError={resetError} />}\r\n      {loading && <Spinner></Spinner>}\r\n      <form className=\"form-container\">\r\n        <div className=\"emailInput-container\">\r\n          <label htmlFor=\"email\" className=\"email-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className=\"email-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Ingresar email\"\r\n            onChange={handleChange}\r\n          ></input>\r\n        </div>\r\n\r\n        <div className=\"passInput-container\">\r\n          <label htmlFor=\"password\" className=\"password-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"password-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"******\"\r\n            onChange={handleChange}\r\n          ></input>\r\n        </div>\r\n\r\n        <button className=\"button-login\" onClick={(e) => handleSubmit(e)}>\r\n          Login\r\n        </button>\r\n      </form>\r\n      {/*<button onClick={handleGoogleSignIn}>Login with google</button>*/}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Alert","message","resetError","className","onClick","Login","useState","email","password","user","setUser","login","useAuth","navigate","useNavigate","error","setError","loading","setLoading","handleChange","target","name","value","handleSubmit","e","preventDefault","code","Spinner","htmlFor","type","placeholder","onChange","id"],"sourceRoot":""}